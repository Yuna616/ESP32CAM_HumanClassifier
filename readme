

ESP32CAM과 딥러닝 모델을 활용하여 사람이 있는지 감지하고 분류하는 프로젝트입니다.

---

## 📋 개요

- ESP32CAM 보드를 이용해 실시간으로 이미지를 캡처  
- 딥러닝 기반 이미지 분류기를 통해 "사람 있음" vs "사람 없음" 구분  
- 서버-클라이언트 구조 → ESP32CAM에서 이미지를 보내면, 백엔드가 분류 후 결과 리포트  
- 웹 기반 UI 또는 REST API 제공

---

## ⚙ 구성

```

ESP32CAM\_HumanClassifier/
├── CameraWebServer            # ESP32CAM 웹서버 코드
├── classifier                 # 이미지 분류 관련 코드
├── deepLearningModel          # 학습된 모델 파일 또는 학습 스크립트
├── images                     # 테스트용 이미지 / 예제 이미지
├── server                     # 백엔드 서버 코드
├── service                    # 분류 서비스 / API
├── templates                  # 웹 UI 템플릿 (HTML 등)
├── test\_image                 # 테스트 이미지 모아둔 디렉토리
├── util                       # 공용 유틸리티 함수
├── app.py                     # 전체 애플리케이션 실행 진입점
├── main.py                    # 메인 로직 실행 파일
├── main\_controller.py         # 컨트롤러 역할, 흐름 제어
└── results.json               # 이전 실행 결과 저장용 JSON 파일

````

---

## 🛠 주요 기술 스택

| 구성 요소 | 기술 / 언어 |
|------------|-------------------|
| 마이크로컨트롤러 | ESP32CAM (C / C++) |
| 이미지 캡처 / 웹서버 | ESP32CAM 자체 웹서버 (CameraWebServer) |
| 딥러닝 분류 | Python 기반 분류기 / 모델 (TensorFlow, PyTorch 등) |
| API / 서버 | Python (Flask / FastAPI 등) |
| 웹 UI | HTML / Templates |
| 유틸리티 | 공통 유틸리티 함수 / 이미지 전처리 등 |

---

## 🚀 설치 및 실행

1. ESP32CAM 보드에 `CameraWebServer` 코드 업로드  
2. 분류 모델 준비 (deepLearningModel 폴더)  
   - 사전 학습된 모델 파일 복사 또는 학습 스크립트 실행  
3. 서버 세팅  
   ```bash
   cd server
   pip install -r requirements.txt
   python app.py
````

4. 웹 UI 접속 또는 API 호출

   * 브라우저에서 `http://<서버주소>` 접속
   * REST API: `/predict` 등 엔드포인트 사용

---

## 📊 용도 및 활용 예시

* 보안 감시 시스템: 사람이 들어오면 알림
* 스마트 홈 / 자동화: 사람이 있을 때 조명/냉난방 조절
* 출입 통제 시스템
* 연구 및 학습용 — 임베디드 + 컴퓨터 비전 통합 프로젝트

---

## 🔍 향후 개선 가능성

* 모델 정확도 향상 (더 많은 데이터, augmentation, 더 좋은 네트워크 아키텍처)
* 지연(latency) 최적화 — ESP32 내 전처리 또는 경량화된 모델 적용
* 보안/인증 추가 — 이미지 전송 및 API 호출 보안
* 웹 UI 사용자 경험 개선
* 실시간 스트리밍 지원

---

## 📄 라이선스

본 프로젝트는 MIT 라이선스를 사용합니다. 자유롭게 사용, 수정, 배포 가능하며, 원 저작자 표시를 부탁드립니다.

---

## 🙋‍♀️ 제작자

* 개발자: Yuna616
* GitHub: [Yuna616](https://github.com/Yuna616)

```

---

원하시면 제가 이 README를 **더 시각적으로 보기 좋게 배지, GIF 예시, 설치 명령어 강조**까지 넣어서 업그레이드해드릴 수도 있어요.  
그거 해드릴까요?
```
